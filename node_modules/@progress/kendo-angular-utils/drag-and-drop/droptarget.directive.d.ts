/**-----------------------------------------------------------------------------------------
* Copyright © 2023 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, EventEmitter, NgZone, OnInit } from "@angular/core";
import { NormalizedDragEvent } from "@progress/kendo-draggable-common";
import { DragStateService } from "./drag-state.service";
import { DropTargetEvent } from './events/drop-target-event';
import * as i0 from "@angular/core";
/**
 * Represents the Kendo UI DropTarget directive for Angular.
 */
export declare class DropTargetDirective implements OnInit {
    private service;
    private element;
    private ngZone;
    /**
     * Fires when a DragTarget element enters the DropTarget.
     */
    dragEnter: EventEmitter<DropTargetEvent>;
    /**
     * Fires when a DragTarget element is being dragged over the DropTarget.
     */
    dragOver: EventEmitter<DropTargetEvent>;
    /**
     * Fires when a DragTarget element leaves the DropTarget.
     */
    dragLeave: EventEmitter<DropTargetEvent>;
    /**
     * Fires when a DragTarget element is dropped over the DropTarget.
     */
    drop: EventEmitter<DropTargetEvent>;
    constructor(service: DragStateService, element: ElementRef, ngZone: NgZone);
    private dropTarget;
    ngOnInit(): void;
    /**
     * @hidden
     */
    handleDragEnter(event: NormalizedDragEvent): void;
    /**
     * @hidden
     */
    handleDragLeave(event: NormalizedDragEvent): void;
    /**
     * @hidden
     */
    handleDragOver(event: NormalizedDragEvent): void;
    /**
     * @hidden
     */
    handleDrop(event: NormalizedDragEvent): void;
    private initializeDropTarget;
    private emitEvent;
    static ɵfac: i0.ɵɵFactoryDeclaration<DropTargetDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DropTargetDirective, "[kendoDropTarget]", ["kendoDropTarget"], {}, { "dragEnter": "dragEnter"; "dragOver": "dragOver"; "dragLeave": "dragLeave"; "drop": "drop"; }, never>;
}
